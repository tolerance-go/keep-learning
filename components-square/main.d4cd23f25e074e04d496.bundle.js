(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{103:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/hzw.6c2c470e.jpeg"},1250:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _storybook_addon_console__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(450);Object(_storybook_addon_console__WEBPACK_IMPORTED_MODULE_0__.setConsoleOptions)({panelExclude:[]})},1274:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(451);module._StorybookPreserveDecorators=!0,Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(1298)],module)}.call(this,__webpack_require__(1275)(module))},1298:function(module,exports,__webpack_require__){var map={"./前端/水平垂直居中布局的方式.stories.tsx":1299};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1298},1299:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Flex",(function(){return Flex})),__webpack_require__.d(__webpack_exports__,"LineHeightAndVerticalAlign",(function(){return LineHeightAndVerticalAlign})),__webpack_require__.d(__webpack_exports__,"VerticalAlign",(function(){return VerticalAlign})),__webpack_require__.d(__webpack_exports__,"TableCell",(function(){return TableCell})),__webpack_require__.d(__webpack_exports__,"AbsoluteMargin",(function(){return AbsoluteMargin})),__webpack_require__.d(__webpack_exports__,"AbsoluteMargin2",(function(){return AbsoluteMargin2})),__webpack_require__.d(__webpack_exports__,"AbsoluteTransform",(function(){return AbsoluteTransform}));var templateObject_1,templateObject_2,templateObject_3,templateObject_4,templateObject_5,templateObject_6,templateObject_7,templateObject_8,templateObject_9,templateObject_10,templateObject_11,templateObject_12,templateObject_13,templateObject_14,templateObject_15,templateObject_16,templateObject_17,templateObject_18,templateObject_19,templateObject_20,templateObject_21,templateObject_22,templateObject_23,templateObject_24,templateObject_25,templateObject_26,templateObject_27,templateObject_28,templateObject_29,templateObject_30,templateObject_31,templateObject_32,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),styled_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(9),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(28),__makeTemplateObject=function(cooked,raw){return Object.defineProperty?Object.defineProperty(cooked,"raw",{value:raw}):cooked.raw=raw,cooked},addSourceDecorator=(__webpack_require__(189).withSource,__webpack_require__(189).addSource),__SOURCE_PREFIX__="/Users/yarnb/pro/keep-learning/components/前端",__STORY__='\n\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require(\'@storybook/source-loader/preview\').withSource;\n// @ts-ignore\nvar addSourceDecorator = require("@storybook/source-loader/preview").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = "/Users/yarnb/pro/keep-learning/components/前端";\n// @ts-ignore\nvar __STORY__ = "import React from \'react\';\\nimport styled from \'styled-components\';\\nimport { number } from \'@storybook/addon-knobs\';\\n\\nconst options = {\\n  range: true,\\n  min: 0,\\n  max: 400,\\n  step: 10,\\n};\\n\\nexport const Flex = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    height: ${textHeight}px;\\n    width: 100px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background: #eee;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n        </TextWrapper>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const LineHeightAndVerticalAlign = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    line-height: ${parentHeight}px;\\n    text-align: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    vertical-align: middle;\\n    display: inline-block;\\n  `;\\n\\n  const ChildOfSignleText = styled.span``;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    display: inline-block;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const VerticalAlign = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    text-align: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    display: inline-block;\\n    vertical-align: middle;\\n  `;\\n  const Placeholder = styled.span`\\n    display: inline-block;\\n    vertical-align: middle;\\n    height: 100%;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    display: inline-block;\\n    height: ${textHeight}px;\\n    width: 100px;\\n    background: #eee;\\n    text-align: center;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n        <Placeholder />\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n        <Placeholder />\\n      </Parent>\\n      <br />\\n      <h2>同样方法用于包装元素失效</h2>\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n          <Placeholder />\\n        </TextWrapper>\\n        <Placeholder />\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const TableCell = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    text-align: center;\\n    display: table-cell;\\n    vertical-align: middle;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    height: ${textHeight}px;\\n    width: 100px;\\n    background: #eee;\\n    display: table-cell;\\n    vertical-align: middle;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n        </TextWrapper>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteMargin = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    margin-top: -${imgHeight / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    margin-top: -${textHeight / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n    height: ${textHeight}px;\\n    margin-top: -${(props) => (props.textHeight || textHeight) / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n    background: yellow;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteMargin2 = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteTransform = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    display: inline-block;\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport default { title: \'垂直居中布局的方式\' };\\n";\n// @ts-ignore\nvar __ADDS_MAP__ = {"垂直居中布局的方式--flex":{"startLoc":{"col":20,"line":12},"endLoc":{"col":1,"line":77},"startBody":{"col":20,"line":12},"endBody":{"col":1,"line":77}},"垂直居中布局的方式--line-height-and-vertical-align":{"startLoc":{"col":42,"line":79},"endLoc":{"col":1,"line":125},"startBody":{"col":42,"line":79},"endBody":{"col":1,"line":125}},"垂直居中布局的方式--vertical-align":{"startLoc":{"col":29,"line":127},"endLoc":{"col":1,"line":201},"startBody":{"col":29,"line":127},"endBody":{"col":1,"line":201}},"垂直居中布局的方式--table-cell":{"startLoc":{"col":25,"line":203},"endLoc":{"col":1,"line":269},"startBody":{"col":25,"line":203},"endBody":{"col":1,"line":269}},"垂直居中布局的方式--absolute-margin":{"startLoc":{"col":30,"line":271},"endLoc":{"col":1,"line":340},"startBody":{"col":30,"line":271},"endBody":{"col":1,"line":340}},"垂直居中布局的方式--absolute-margin-2":{"startLoc":{"col":31,"line":342},"endLoc":{"col":1,"line":411},"startBody":{"col":31,"line":342},"endBody":{"col":1,"line":411}},"垂直居中布局的方式--absolute-transform":{"startLoc":{"col":33,"line":413},"endLoc":{"col":1,"line":471},"startBody":{"col":33,"line":413},"endBody":{"col":1,"line":471}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = "/水平垂直居中布局的方式.stories.tsx";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from \'react\';\nimport styled from \'styled-components\';\nimport { number } from \'@storybook/addon-knobs\';\n\nconst options = {\n  range: true,\n  min: 0,\n  max: 400,\n  step: 10,\n};\n\nexport const Flex = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    height: ${textHeight}px;\n    width: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #eee;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={\'100%\'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n        </TextWrapper>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const LineHeightAndVerticalAlign = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    line-height: ${parentHeight}px;\n    text-align: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    vertical-align: middle;\n    display: inline-block;\n  `;\n\n  const ChildOfSignleText = styled.span``;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    display: inline-block;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const VerticalAlign = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    text-align: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    display: inline-block;\n    vertical-align: middle;\n  `;\n  const Placeholder = styled.span`\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    display: inline-block;\n    height: ${textHeight}px;\n    width: 100px;\n    background: #eee;\n    text-align: center;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n        <Placeholder />\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n        <Placeholder />\n      </Parent>\n      <br />\n      <h2>同样方法用于包装元素失效</h2>\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={\'100%\'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n          <Placeholder />\n        </TextWrapper>\n        <Placeholder />\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const TableCell = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    text-align: center;\n    display: table-cell;\n    vertical-align: middle;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    display: inline-block;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    height: ${textHeight}px;\n    width: 100px;\n    background: #eee;\n    display: table-cell;\n    vertical-align: middle;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n      <br />\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={\'100%\'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n        </TextWrapper>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const AbsoluteMargin = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    margin-top: -${imgHeight / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    width: 100px;\n    height: ${textHeight}px;\n    margin-top: -${textHeight / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n    height: ${textHeight}px;\n    margin-top: -${(props) => (props.textHeight || textHeight) / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    background: yellow;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const AbsoluteMargin2 = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    width: 100px;\n    height: ${textHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${textHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const AbsoluteTransform = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    display: inline-block;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport default {parameters: {"storySource":{"source":"import React from \'react\';\\nimport styled from \'styled-components\';\\nimport { number } from \'@storybook/addon-knobs\';\\n\\nconst options = {\\n  range: true,\\n  min: 0,\\n  max: 400,\\n  step: 10,\\n};\\n\\nexport const Flex = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    height: ${textHeight}px;\\n    width: 100px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background: #eee;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n        </TextWrapper>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const LineHeightAndVerticalAlign = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    line-height: ${parentHeight}px;\\n    text-align: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    vertical-align: middle;\\n    display: inline-block;\\n  `;\\n\\n  const ChildOfSignleText = styled.span``;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    display: inline-block;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const VerticalAlign = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    text-align: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    display: inline-block;\\n    vertical-align: middle;\\n  `;\\n  const Placeholder = styled.span`\\n    display: inline-block;\\n    vertical-align: middle;\\n    height: 100%;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    display: inline-block;\\n    height: ${textHeight}px;\\n    width: 100px;\\n    background: #eee;\\n    text-align: center;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n        <Placeholder />\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n        <Placeholder />\\n      </Parent>\\n      <br />\\n      <h2>同样方法用于包装元素失效</h2>\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n          <Placeholder />\\n        </TextWrapper>\\n        <Placeholder />\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const TableCell = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    text-align: center;\\n    display: table-cell;\\n    vertical-align: middle;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    height: ${textHeight}px;\\n    width: 100px;\\n    background: #eee;\\n    display: table-cell;\\n    vertical-align: middle;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n        </TextWrapper>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteMargin = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    margin-top: -${imgHeight / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    margin-top: -${textHeight / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n    height: ${textHeight}px;\\n    margin-top: -${(props) => (props.textHeight || textHeight) / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n    background: yellow;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteMargin2 = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteTransform = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    display: inline-block;\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport default { title: \'垂直居中布局的方式\' };\\n","locationsMap":{"垂直居中布局的方式--flex":{"startLoc":{"col":20,"line":12},"endLoc":{"col":1,"line":77},"startBody":{"col":20,"line":12},"endBody":{"col":1,"line":77}},"垂直居中布局的方式--line-height-and-vertical-align":{"startLoc":{"col":42,"line":79},"endLoc":{"col":1,"line":125},"startBody":{"col":42,"line":79},"endBody":{"col":1,"line":125}},"垂直居中布局的方式--vertical-align":{"startLoc":{"col":29,"line":127},"endLoc":{"col":1,"line":201},"startBody":{"col":29,"line":127},"endBody":{"col":1,"line":201}},"垂直居中布局的方式--table-cell":{"startLoc":{"col":25,"line":203},"endLoc":{"col":1,"line":269},"startBody":{"col":25,"line":203},"endBody":{"col":1,"line":269}},"垂直居中布局的方式--absolute-margin":{"startLoc":{"col":30,"line":271},"endLoc":{"col":1,"line":340},"startBody":{"col":30,"line":271},"endBody":{"col":1,"line":340}},"垂直居中布局的方式--absolute-margin-2":{"startLoc":{"col":31,"line":342},"endLoc":{"col":1,"line":411},"startBody":{"col":31,"line":342},"endBody":{"col":1,"line":411}},"垂直居中布局的方式--absolute-transform":{"startLoc":{"col":33,"line":413},"endLoc":{"col":1,"line":471},"startBody":{"col":33,"line":413},"endBody":{"col":1,"line":471}}}},}, title: \'垂直居中布局的方式\' };\n',__ADDS_MAP__={"垂直居中布局的方式--flex":{startLoc:{col:20,line:34},endLoc:{col:139,line:99},startBody:{col:20,line:34},endBody:{col:139,line:99}},"垂直居中布局的方式--line-height-and-vertical-align":{startLoc:{col:42,line:101},endLoc:{col:139,line:147},startBody:{col:42,line:101},endBody:{col:139,line:147}},"垂直居中布局的方式--vertical-align":{startLoc:{col:29,line:149},endLoc:{col:139,line:223},startBody:{col:29,line:149},endBody:{col:139,line:223}},"垂直居中布局的方式--table-cell":{startLoc:{col:25,line:225},endLoc:{col:139,line:291},startBody:{col:25,line:225},endBody:{col:139,line:291}},"垂直居中布局的方式--absolute-margin":{startLoc:{col:30,line:293},endLoc:{col:139,line:362},startBody:{col:30,line:293},endBody:{col:139,line:362}},"垂直居中布局的方式--absolute-margin-2":{startLoc:{col:31,line:364},endLoc:{col:139,line:433},startBody:{col:31,line:364},endBody:{col:139,line:433}},"垂直居中布局的方式--absolute-transform":{startLoc:{col:33,line:435},endLoc:{col:139,line:493},startBody:{col:33,line:435},endBody:{col:139,line:493}}},__MAIN_FILE_LOCATION__="/水平垂直居中布局的方式.stories.tsx",__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={},options=(__webpack_require__(189).withSource,addSourceDecorator=__webpack_require__(189).addSource,{range:!0,min:0,max:400,step:10}),Flex=addSourceDecorator(addSourceDecorator((function(){var parentHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("parent height",200,options),imgHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("img height",100,options),textHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("text height",100,options),Parent=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_1||(templateObject_1=__makeTemplateObject(["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  "],["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  "])),parentHeight),ChildOfImg=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.img.attrs((function(){return{src:__webpack_require__(103)}}))(templateObject_2||(templateObject_2=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n  "],["\n    width: 100px;\n    height: ","px;\n  "])),imgHeight),ChildOfSignleText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_3||(templateObject_3=__makeTemplateObject(["\n    height: ","px;\n  "],["\n    height: ","px;\n  "])),textHeight),ChildOfMultiText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_4||(templateObject_4=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n  "],["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n  "])),(function(props){return props.textHeight||textHeight})),TextWrapper=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_5||(templateObject_5=__makeTemplateObject(["\n    height: ","px;\n    width: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #eee;\n  "],["\n    height: ","px;\n    width: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #eee;\n  "])),textHeight);return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfImg,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfSignleText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TextWrapper,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,{textHeight:"100%"},"文本文本文本文本文本文本文本文本文本文本文本文本文本"))))}),{__STORY__:__STORY__="import React from 'react';\nimport styled from 'styled-components';\nimport { number } from '@storybook/addon-knobs';\n\nconst options = {\n  range: true,\n  min: 0,\n  max: 400,\n  step: 10,\n};\n\nexport const Flex = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    height: ${textHeight}px;\n    width: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #eee;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={'100%'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n        </TextWrapper>\n      </Parent>\n    </>\n  );\n};\n\nexport const LineHeightAndVerticalAlign = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    line-height: ${parentHeight}px;\n    text-align: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    vertical-align: middle;\n    display: inline-block;\n  `;\n\n  const ChildOfSignleText = styled.span``;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    display: inline-block;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n};\n\nexport const VerticalAlign = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    text-align: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    display: inline-block;\n    vertical-align: middle;\n  `;\n  const Placeholder = styled.span`\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    display: inline-block;\n    height: ${textHeight}px;\n    width: 100px;\n    background: #eee;\n    text-align: center;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n        <Placeholder />\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n        <Placeholder />\n      </Parent>\n      <br />\n      <h2>同样方法用于包装元素失效</h2>\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={'100%'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n          <Placeholder />\n        </TextWrapper>\n        <Placeholder />\n      </Parent>\n    </>\n  );\n};\n\nexport const TableCell = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    text-align: center;\n    display: table-cell;\n    vertical-align: middle;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    display: inline-block;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    height: ${textHeight}px;\n    width: 100px;\n    background: #eee;\n    display: table-cell;\n    vertical-align: middle;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n      <br />\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={'100%'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n        </TextWrapper>\n      </Parent>\n    </>\n  );\n};\n\nexport const AbsoluteMargin = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    margin-top: -${imgHeight / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    width: 100px;\n    height: ${textHeight}px;\n    margin-top: -${textHeight / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n    height: ${textHeight}px;\n    margin-top: -${(props) => (props.textHeight || textHeight) / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    background: yellow;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n};\n\nexport const AbsoluteMargin2 = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    width: 100px;\n    height: ${textHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${textHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n};\n\nexport const AbsoluteTransform = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    display: inline-block;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n};\n\nexport default { title: '垂直居中布局的方式' };\n",__ADDS_MAP__:__ADDS_MAP__={"垂直居中布局的方式--flex":{startLoc:{col:20,line:12},endLoc:{col:1,line:77},startBody:{col:20,line:12},endBody:{col:1,line:77}},"垂直居中布局的方式--line-height-and-vertical-align":{startLoc:{col:42,line:79},endLoc:{col:1,line:125},startBody:{col:42,line:79},endBody:{col:1,line:125}},"垂直居中布局的方式--vertical-align":{startLoc:{col:29,line:127},endLoc:{col:1,line:201},startBody:{col:29,line:127},endBody:{col:1,line:201}},"垂直居中布局的方式--table-cell":{startLoc:{col:25,line:203},endLoc:{col:1,line:269},startBody:{col:25,line:203},endBody:{col:1,line:269}},"垂直居中布局的方式--absolute-margin":{startLoc:{col:30,line:271},endLoc:{col:1,line:340},startBody:{col:30,line:271},endBody:{col:1,line:340}},"垂直居中布局的方式--absolute-margin-2":{startLoc:{col:31,line:342},endLoc:{col:1,line:411},startBody:{col:31,line:342},endBody:{col:1,line:411}},"垂直居中布局的方式--absolute-transform":{startLoc:{col:33,line:413},endLoc:{col:1,line:471},startBody:{col:33,line:413},endBody:{col:1,line:471}}},__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__="/水平垂直居中布局的方式.stories.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__={},__SOURCE_PREFIX__:__SOURCE_PREFIX__="/Users/yarnb/pro/keep-learning/components/前端",__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__={}}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),LineHeightAndVerticalAlign=addSourceDecorator(addSourceDecorator((function(){var parentHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("parent height",200,options),imgHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("img height",100,options),Parent=(Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("text height",100,options),styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_6||(templateObject_6=__makeTemplateObject(["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    line-height: ","px;\n    text-align: center;\n  "],["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    line-height: ","px;\n    text-align: center;\n  "])),parentHeight,parentHeight)),ChildOfImg=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.img.attrs((function(){return{src:__webpack_require__(103)}}))(templateObject_7||(templateObject_7=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    vertical-align: middle;\n    display: inline-block;\n  "],["\n    width: 100px;\n    height: ","px;\n    vertical-align: middle;\n    display: inline-block;\n  "])),imgHeight),ChildOfSignleText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_8||(templateObject_8=__makeTemplateObject([""],[""]))),ChildOfMultiText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_9||(templateObject_9=__makeTemplateObject(["\n    width: 100px;\n    display: inline-block;\n  "],["\n    width: 100px;\n    display: inline-block;\n  "])));return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfImg,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfSignleText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),VerticalAlign=addSourceDecorator(addSourceDecorator((function(){var parentHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("parent height",200,options),imgHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("img height",100,options),textHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("text height",100,options),Parent=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_10||(templateObject_10=__makeTemplateObject(["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    text-align: center;\n  "],["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    text-align: center;\n  "])),parentHeight),ChildOfImg=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.img.attrs((function(){return{src:__webpack_require__(103)}}))(templateObject_11||(templateObject_11=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n    vertical-align: middle;\n  "],["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n    vertical-align: middle;\n  "])),imgHeight),Placeholder=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_12||(templateObject_12=__makeTemplateObject(["\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n  "],["\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n  "]))),ChildOfSignleText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_13||(templateObject_13=__makeTemplateObject(["\n    height: ","px;\n  "],["\n    height: ","px;\n  "])),textHeight),ChildOfMultiText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_14||(templateObject_14=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n  "],["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n  "])),(function(props){return props.textHeight||textHeight})),TextWrapper=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_15||(templateObject_15=__makeTemplateObject(["\n    display: inline-block;\n    height: ","px;\n    width: 100px;\n    background: #eee;\n    text-align: center;\n  "],["\n    display: inline-block;\n    height: ","px;\n    width: 100px;\n    background: #eee;\n    text-align: center;\n  "])),textHeight);return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfImg,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfSignleText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Placeholder,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Placeholder,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("h2",null,"同样方法用于包装元素失效"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TextWrapper,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,{textHeight:"100%"},"文本文本文本文本文本文本文本文本文本文本文本文本文本"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Placeholder,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Placeholder,null)))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),TableCell=addSourceDecorator(addSourceDecorator((function(){var parentHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("parent height",200,options),imgHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("img height",100,options),textHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("text height",100,options),Parent=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_16||(templateObject_16=__makeTemplateObject(["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    text-align: center;\n    display: table-cell;\n    vertical-align: middle;\n  "],["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    text-align: center;\n    display: table-cell;\n    vertical-align: middle;\n  "])),parentHeight),ChildOfImg=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.img.attrs((function(){return{src:__webpack_require__(103)}}))(templateObject_17||(templateObject_17=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n  "],["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n  "])),imgHeight),ChildOfSignleText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_18||(templateObject_18=__makeTemplateObject(["\n    height: ","px;\n  "],["\n    height: ","px;\n  "])),textHeight),ChildOfMultiText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_19||(templateObject_19=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n  "],["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n  "])),(function(props){return props.textHeight||textHeight})),TextWrapper=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_20||(templateObject_20=__makeTemplateObject(["\n    height: ","px;\n    width: 100px;\n    background: #eee;\n    display: table-cell;\n    vertical-align: middle;\n  "],["\n    height: ","px;\n    width: 100px;\n    background: #eee;\n    display: table-cell;\n    vertical-align: middle;\n  "])),textHeight);return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfImg,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfSignleText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TextWrapper,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,{textHeight:"100%"},"文本文本文本文本文本文本文本文本文本文本文本文本文本"))))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),AbsoluteMargin=addSourceDecorator(addSourceDecorator((function(){var parentHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("parent height",200,options),imgHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("img height",100,options),textHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("text height",100,options),Parent=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_21||(templateObject_21=__makeTemplateObject(["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    position: relative;\n  "],["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    position: relative;\n  "])),parentHeight),ChildOfImg=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.img.attrs((function(){return{src:__webpack_require__(103)}}))(templateObject_22||(templateObject_22=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    margin-top: -","px;\n    margin-left: -","px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  "],["\n    width: 100px;\n    height: ","px;\n    margin-top: -","px;\n    margin-left: -","px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  "])),imgHeight,imgHeight/2,50),ChildOfSignleText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_23||(templateObject_23=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    margin-top: -","px;\n    margin-left: -","px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  "],["\n    width: 100px;\n    height: ","px;\n    margin-top: -","px;\n    margin-left: -","px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  "])),textHeight,textHeight/2,50),ChildOfMultiText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_24||(templateObject_24=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n    height: ","px;\n    margin-top: -","px;\n    margin-left: -","px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    background: yellow;\n  "],["\n    width: 100px;\n    height: ","px;\n    display: inline-block;\n    height: ","px;\n    margin-top: -","px;\n    margin-left: -","px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    background: yellow;\n  "])),(function(props){return props.textHeight||textHeight}),textHeight,(function(props){return(props.textHeight||textHeight)/2}),50);return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfImg,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("h2",null,"单行截断显示，无法直接居中"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfSignleText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),AbsoluteMargin2=addSourceDecorator(addSourceDecorator((function(){var parentHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("parent height",200,options),imgHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("img height",100,options),textHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("text height",100,options),Parent=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_25||(templateObject_25=__makeTemplateObject(["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    position: relative;\n  "],["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    position: relative;\n  "])),parentHeight),ChildOfImg=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.img.attrs((function(){return{src:__webpack_require__(103)}}))(templateObject_26||(templateObject_26=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  "],["\n    width: 100px;\n    height: ","px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  "])),imgHeight),ChildOfSignleText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_27||(templateObject_27=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  "],["\n    width: 100px;\n    height: ","px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  "])),textHeight),ChildOfMultiText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_28||(templateObject_28=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  "],["\n    width: 100px;\n    height: ","px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  "])),textHeight);return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfImg,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("h2",null,"单行截断显示，无法直接居中"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfSignleText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),AbsoluteTransform=addSourceDecorator(addSourceDecorator((function(){var parentHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("parent height",200,options),imgHeight=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("img height",100,options),Parent=(Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.number)("text height",100,options),styled_components__WEBPACK_IMPORTED_MODULE_1__.a.div(templateObject_29||(templateObject_29=__makeTemplateObject(["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    position: relative;\n  "],["\n    width: 100%;\n    height: ","px;\n    background: #ccc;\n    position: relative;\n  "])),parentHeight)),ChildOfImg=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.img.attrs((function(){return{src:__webpack_require__(103)}}))(templateObject_30||(templateObject_30=__makeTemplateObject(["\n    width: 100px;\n    height: ","px;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  "],["\n    width: 100px;\n    height: ","px;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  "])),imgHeight),ChildOfSignleText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_31||(templateObject_31=__makeTemplateObject(["\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  "],["\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  "]))),ChildOfMultiText=styled_components__WEBPACK_IMPORTED_MODULE_1__.a.span(templateObject_32||(templateObject_32=__makeTemplateObject(["\n    width: 100px;\n    display: inline-block;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  "],["\n    width: 100px;\n    display: inline-block;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  "])));return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfImg,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("h2",null,"单行截断显示，无法直接居中"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfSignleText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Parent,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ChildOfMultiText,null,"文本文本文本文本文本文本文本文本文本文本文本文本文本")))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__});__webpack_exports__.default={parameters:{storySource:{source:'\n\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require(\'@storybook/source-loader/preview\').withSource;\n// @ts-ignore\nvar addSourceDecorator = require("@storybook/source-loader/preview").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = "/Users/yarnb/pro/keep-learning/components/前端";\n// @ts-ignore\nvar __STORY__ = "import React from \'react\';\\nimport styled from \'styled-components\';\\nimport { number } from \'@storybook/addon-knobs\';\\n\\nconst options = {\\n  range: true,\\n  min: 0,\\n  max: 400,\\n  step: 10,\\n};\\n\\nexport const Flex = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    height: ${textHeight}px;\\n    width: 100px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background: #eee;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n        </TextWrapper>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const LineHeightAndVerticalAlign = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    line-height: ${parentHeight}px;\\n    text-align: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    vertical-align: middle;\\n    display: inline-block;\\n  `;\\n\\n  const ChildOfSignleText = styled.span``;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    display: inline-block;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const VerticalAlign = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    text-align: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    display: inline-block;\\n    vertical-align: middle;\\n  `;\\n  const Placeholder = styled.span`\\n    display: inline-block;\\n    vertical-align: middle;\\n    height: 100%;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    display: inline-block;\\n    height: ${textHeight}px;\\n    width: 100px;\\n    background: #eee;\\n    text-align: center;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n        <Placeholder />\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n        <Placeholder />\\n      </Parent>\\n      <br />\\n      <h2>同样方法用于包装元素失效</h2>\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n          <Placeholder />\\n        </TextWrapper>\\n        <Placeholder />\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const TableCell = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    text-align: center;\\n    display: table-cell;\\n    vertical-align: middle;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    height: ${textHeight}px;\\n    width: 100px;\\n    background: #eee;\\n    display: table-cell;\\n    vertical-align: middle;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n        </TextWrapper>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteMargin = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    margin-top: -${imgHeight / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    margin-top: -${textHeight / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n    height: ${textHeight}px;\\n    margin-top: -${(props) => (props.textHeight || textHeight) / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n    background: yellow;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteMargin2 = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteTransform = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    display: inline-block;\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport default { title: \'垂直居中布局的方式\' };\\n";\n// @ts-ignore\nvar __ADDS_MAP__ = {"垂直居中布局的方式--flex":{"startLoc":{"col":20,"line":12},"endLoc":{"col":1,"line":77},"startBody":{"col":20,"line":12},"endBody":{"col":1,"line":77}},"垂直居中布局的方式--line-height-and-vertical-align":{"startLoc":{"col":42,"line":79},"endLoc":{"col":1,"line":125},"startBody":{"col":42,"line":79},"endBody":{"col":1,"line":125}},"垂直居中布局的方式--vertical-align":{"startLoc":{"col":29,"line":127},"endLoc":{"col":1,"line":201},"startBody":{"col":29,"line":127},"endBody":{"col":1,"line":201}},"垂直居中布局的方式--table-cell":{"startLoc":{"col":25,"line":203},"endLoc":{"col":1,"line":269},"startBody":{"col":25,"line":203},"endBody":{"col":1,"line":269}},"垂直居中布局的方式--absolute-margin":{"startLoc":{"col":30,"line":271},"endLoc":{"col":1,"line":340},"startBody":{"col":30,"line":271},"endBody":{"col":1,"line":340}},"垂直居中布局的方式--absolute-margin-2":{"startLoc":{"col":31,"line":342},"endLoc":{"col":1,"line":411},"startBody":{"col":31,"line":342},"endBody":{"col":1,"line":411}},"垂直居中布局的方式--absolute-transform":{"startLoc":{"col":33,"line":413},"endLoc":{"col":1,"line":471},"startBody":{"col":33,"line":413},"endBody":{"col":1,"line":471}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = "/水平垂直居中布局的方式.stories.tsx";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from \'react\';\nimport styled from \'styled-components\';\nimport { number } from \'@storybook/addon-knobs\';\n\nconst options = {\n  range: true,\n  min: 0,\n  max: 400,\n  step: 10,\n};\n\nexport const Flex = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    height: ${textHeight}px;\n    width: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #eee;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={\'100%\'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n        </TextWrapper>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const LineHeightAndVerticalAlign = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    line-height: ${parentHeight}px;\n    text-align: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    vertical-align: middle;\n    display: inline-block;\n  `;\n\n  const ChildOfSignleText = styled.span``;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    display: inline-block;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const VerticalAlign = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    text-align: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    display: inline-block;\n    vertical-align: middle;\n  `;\n  const Placeholder = styled.span`\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    display: inline-block;\n    height: ${textHeight}px;\n    width: 100px;\n    background: #eee;\n    text-align: center;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n        <Placeholder />\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n        <Placeholder />\n      </Parent>\n      <br />\n      <h2>同样方法用于包装元素失效</h2>\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={\'100%\'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n          <Placeholder />\n        </TextWrapper>\n        <Placeholder />\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const TableCell = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    text-align: center;\n    display: table-cell;\n    vertical-align: middle;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    display: inline-block;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    height: ${textHeight}px;\n    width: 100px;\n    background: #eee;\n    display: table-cell;\n    vertical-align: middle;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n      <br />\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={\'100%\'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n        </TextWrapper>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const AbsoluteMargin = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    margin-top: -${imgHeight / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    width: 100px;\n    height: ${textHeight}px;\n    margin-top: -${textHeight / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n    height: ${textHeight}px;\n    margin-top: -${(props) => (props.textHeight || textHeight) / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    background: yellow;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const AbsoluteMargin2 = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    width: 100px;\n    height: ${textHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${textHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nexport const AbsoluteTransform = addSourceDecorator(() => {\n  const parentHeight = number(\'parent height\', 200, options);\n  const imgHeight = number(\'img height\', 100, options);\n  const textHeight = number(\'text height\', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require(\'../../assets/hzw.jpeg\'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    display: inline-block;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nexport default {parameters: {"storySource":{"source":"import React from \'react\';\\nimport styled from \'styled-components\';\\nimport { number } from \'@storybook/addon-knobs\';\\n\\nconst options = {\\n  range: true,\\n  min: 0,\\n  max: 400,\\n  step: 10,\\n};\\n\\nexport const Flex = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    height: ${textHeight}px;\\n    width: 100px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background: #eee;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n        </TextWrapper>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const LineHeightAndVerticalAlign = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    line-height: ${parentHeight}px;\\n    text-align: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    vertical-align: middle;\\n    display: inline-block;\\n  `;\\n\\n  const ChildOfSignleText = styled.span``;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    display: inline-block;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const VerticalAlign = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    text-align: center;\\n  `;\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    display: inline-block;\\n    vertical-align: middle;\\n  `;\\n  const Placeholder = styled.span`\\n    display: inline-block;\\n    vertical-align: middle;\\n    height: 100%;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    display: inline-block;\\n    height: ${textHeight}px;\\n    width: 100px;\\n    background: #eee;\\n    text-align: center;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n        <Placeholder />\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n        <Placeholder />\\n      </Parent>\\n      <br />\\n      <h2>同样方法用于包装元素失效</h2>\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n          <Placeholder />\\n        </TextWrapper>\\n        <Placeholder />\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const TableCell = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    text-align: center;\\n    display: table-cell;\\n    vertical-align: middle;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    height: ${textHeight}px;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n  `;\\n\\n  const TextWrapper = styled.div`\\n    height: ${textHeight}px;\\n    width: 100px;\\n    background: #eee;\\n    display: table-cell;\\n    vertical-align: middle;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <TextWrapper>\\n          <ChildOfMultiText textHeight={\'100%\'}>\\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\\n          </ChildOfMultiText>\\n        </TextWrapper>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteMargin = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    margin-top: -${imgHeight / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    margin-top: -${textHeight / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${(props) => props.textHeight || textHeight}px;\\n    display: inline-block;\\n    height: ${textHeight}px;\\n    margin-top: -${(props) => (props.textHeight || textHeight) / 2}px;\\n    margin-left: -${100 / 2}px;\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n    background: yellow;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteMargin2 = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    height: ${textHeight}px;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    margin: auto;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport const AbsoluteTransform = () => {\\n  const parentHeight = number(\'parent height\', 200, options);\\n  const imgHeight = number(\'img height\', 100, options);\\n  const textHeight = number(\'text height\', 100, options);\\n  const Parent = styled.div`\\n    width: 100%;\\n    height: ${parentHeight}px;\\n    background: #ccc;\\n    position: relative;\\n  `;\\n\\n  const ChildOfImg = styled.img.attrs(() => ({\\n    src: require(\'../../assets/hzw.jpeg\'),\\n  }))`\\n    width: 100px;\\n    height: ${imgHeight}px;\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfSignleText = styled.span`\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\\n    width: 100px;\\n    display: inline-block;\\n    transform: translate(-50%, -50%);\\n    top: 50%;\\n    left: 50%;\\n    position: absolute;\\n  `;\\n\\n  return (\\n    <>\\n      <Parent>\\n        <ChildOfImg></ChildOfImg>\\n      </Parent>\\n      <br />\\n      <h2>单行截断显示，无法直接居中</h2>\\n      <Parent>\\n        <ChildOfSignleText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfSignleText>\\n      </Parent>\\n      <br />\\n      <Parent>\\n        <ChildOfMultiText>\\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\\n        </ChildOfMultiText>\\n      </Parent>\\n    </>\\n  );\\n};\\n\\nexport default { title: \'垂直居中布局的方式\' };\\n","locationsMap":{"垂直居中布局的方式--flex":{"startLoc":{"col":20,"line":12},"endLoc":{"col":1,"line":77},"startBody":{"col":20,"line":12},"endBody":{"col":1,"line":77}},"垂直居中布局的方式--line-height-and-vertical-align":{"startLoc":{"col":42,"line":79},"endLoc":{"col":1,"line":125},"startBody":{"col":42,"line":79},"endBody":{"col":1,"line":125}},"垂直居中布局的方式--vertical-align":{"startLoc":{"col":29,"line":127},"endLoc":{"col":1,"line":201},"startBody":{"col":29,"line":127},"endBody":{"col":1,"line":201}},"垂直居中布局的方式--table-cell":{"startLoc":{"col":25,"line":203},"endLoc":{"col":1,"line":269},"startBody":{"col":25,"line":203},"endBody":{"col":1,"line":269}},"垂直居中布局的方式--absolute-margin":{"startLoc":{"col":30,"line":271},"endLoc":{"col":1,"line":340},"startBody":{"col":30,"line":271},"endBody":{"col":1,"line":340}},"垂直居中布局的方式--absolute-margin-2":{"startLoc":{"col":31,"line":342},"endLoc":{"col":1,"line":411},"startBody":{"col":31,"line":342},"endBody":{"col":1,"line":411}},"垂直居中布局的方式--absolute-transform":{"startLoc":{"col":33,"line":413},"endLoc":{"col":1,"line":471},"startBody":{"col":33,"line":413},"endBody":{"col":1,"line":471}}}},}, title: \'垂直居中布局的方式\' };\n',locationsMap:{"垂直居中布局的方式--flex":{startLoc:{col:20,line:34},endLoc:{col:139,line:99},startBody:{col:20,line:34},endBody:{col:139,line:99}},"垂直居中布局的方式--line-height-and-vertical-align":{startLoc:{col:42,line:101},endLoc:{col:139,line:147},startBody:{col:42,line:101},endBody:{col:139,line:147}},"垂直居中布局的方式--vertical-align":{startLoc:{col:29,line:149},endLoc:{col:139,line:223},startBody:{col:29,line:149},endBody:{col:139,line:223}},"垂直居中布局的方式--table-cell":{startLoc:{col:25,line:225},endLoc:{col:139,line:291},startBody:{col:25,line:225},endBody:{col:139,line:291}},"垂直居中布局的方式--absolute-margin":{startLoc:{col:30,line:293},endLoc:{col:139,line:362},startBody:{col:30,line:293},endBody:{col:139,line:362}},"垂直居中布局的方式--absolute-margin-2":{startLoc:{col:31,line:364},endLoc:{col:139,line:433},startBody:{col:31,line:364},endBody:{col:139,line:433}},"垂直居中布局的方式--absolute-transform":{startLoc:{col:33,line:435},endLoc:{col:139,line:493},startBody:{col:33,line:435},endBody:{col:139,line:493}}}},storySource:{source:"import React from 'react';\nimport styled from 'styled-components';\nimport { number } from '@storybook/addon-knobs';\n\nconst options = {\n  range: true,\n  min: 0,\n  max: 400,\n  step: 10,\n};\n\nexport const Flex = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    height: ${textHeight}px;\n    width: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #eee;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={'100%'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n        </TextWrapper>\n      </Parent>\n    </>\n  );\n};\n\nexport const LineHeightAndVerticalAlign = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    line-height: ${parentHeight}px;\n    text-align: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    vertical-align: middle;\n    display: inline-block;\n  `;\n\n  const ChildOfSignleText = styled.span``;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    display: inline-block;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n};\n\nexport const VerticalAlign = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    text-align: center;\n  `;\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    display: inline-block;\n    vertical-align: middle;\n  `;\n  const Placeholder = styled.span`\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    display: inline-block;\n    height: ${textHeight}px;\n    width: 100px;\n    background: #eee;\n    text-align: center;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n        <Placeholder />\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n        <Placeholder />\n      </Parent>\n      <br />\n      <h2>同样方法用于包装元素失效</h2>\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={'100%'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n          <Placeholder />\n        </TextWrapper>\n        <Placeholder />\n      </Parent>\n    </>\n  );\n};\n\nexport const TableCell = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    text-align: center;\n    display: table-cell;\n    vertical-align: middle;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    display: inline-block;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    height: ${textHeight}px;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n  `;\n\n  const TextWrapper = styled.div`\n    height: ${textHeight}px;\n    width: 100px;\n    background: #eee;\n    display: table-cell;\n    vertical-align: middle;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n      <br />\n      <Parent>\n        <TextWrapper>\n          <ChildOfMultiText textHeight={'100%'}>\n            文本文本文本文本文本文本文本文本文本文本文本文本文本\n          </ChildOfMultiText>\n        </TextWrapper>\n      </Parent>\n    </>\n  );\n};\n\nexport const AbsoluteMargin = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    margin-top: -${imgHeight / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    width: 100px;\n    height: ${textHeight}px;\n    margin-top: -${textHeight / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${(props) => props.textHeight || textHeight}px;\n    display: inline-block;\n    height: ${textHeight}px;\n    margin-top: -${(props) => (props.textHeight || textHeight) / 2}px;\n    margin-left: -${100 / 2}px;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    background: yellow;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n};\n\nexport const AbsoluteMargin2 = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    width: 100px;\n    height: ${textHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    height: ${textHeight}px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n};\n\nexport const AbsoluteTransform = () => {\n  const parentHeight = number('parent height', 200, options);\n  const imgHeight = number('img height', 100, options);\n  const textHeight = number('text height', 100, options);\n  const Parent = styled.div`\n    width: 100%;\n    height: ${parentHeight}px;\n    background: #ccc;\n    position: relative;\n  `;\n\n  const ChildOfImg = styled.img.attrs(() => ({\n    src: require('../../assets/hzw.jpeg'),\n  }))`\n    width: 100px;\n    height: ${imgHeight}px;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfSignleText = styled.span`\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  const ChildOfMultiText = styled.span<{ textHeight?: number | string }>`\n    width: 100px;\n    display: inline-block;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    left: 50%;\n    position: absolute;\n  `;\n\n  return (\n    <>\n      <Parent>\n        <ChildOfImg></ChildOfImg>\n      </Parent>\n      <br />\n      <h2>单行截断显示，无法直接居中</h2>\n      <Parent>\n        <ChildOfSignleText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfSignleText>\n      </Parent>\n      <br />\n      <Parent>\n        <ChildOfMultiText>\n          文本文本文本文本文本文本文本文本文本文本文本文本文本\n        </ChildOfMultiText>\n      </Parent>\n    </>\n  );\n};\n\nexport default { title: '垂直居中布局的方式' };\n",locationsMap:{"垂直居中布局的方式--flex":{startLoc:{col:20,line:12},endLoc:{col:1,line:77},startBody:{col:20,line:12},endBody:{col:1,line:77}},"垂直居中布局的方式--line-height-and-vertical-align":{startLoc:{col:42,line:79},endLoc:{col:1,line:125},startBody:{col:42,line:79},endBody:{col:1,line:125}},"垂直居中布局的方式--vertical-align":{startLoc:{col:29,line:127},endLoc:{col:1,line:201},startBody:{col:29,line:127},endBody:{col:1,line:201}},"垂直居中布局的方式--table-cell":{startLoc:{col:25,line:203},endLoc:{col:1,line:269},startBody:{col:25,line:203},endBody:{col:1,line:269}},"垂直居中布局的方式--absolute-margin":{startLoc:{col:30,line:271},endLoc:{col:1,line:340},startBody:{col:30,line:271},endBody:{col:1,line:340}},"垂直居中布局的方式--absolute-margin-2":{startLoc:{col:31,line:342},endLoc:{col:1,line:411},startBody:{col:31,line:342},endBody:{col:1,line:411}},"垂直居中布局的方式--absolute-transform":{startLoc:{col:33,line:413},endLoc:{col:1,line:471},startBody:{col:33,line:413},endBody:{col:1,line:471}}}}},title:"垂直居中布局的方式"}},453:function(module,exports,__webpack_require__){__webpack_require__(454),__webpack_require__(597),__webpack_require__(598),__webpack_require__(1249),__webpack_require__(1250),__webpack_require__(1265),module.exports=__webpack_require__(1274)},516:function(module,exports){}},[[453,1,2]]]);
//# sourceMappingURL=main.d4cd23f25e074e04d496.bundle.js.map
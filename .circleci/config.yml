version: 2.1

aliases:
  - &restore_yarn_cache
    restore_cache:
      name: Restore Node_modules Cache
      keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
  - &run_yarn
    run:
      name: Install Packages
      command: yarn --frozen-lockfile

jobs:
  setup:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - *restore_yarn_cache
      - *run_yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  test:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - *restore_yarn_cache
      - *run_yarn
      - run:
          name: Test
          command: yarn test

  build:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - *restore_yarn_cache
      - *run_yarn
      - run:
          name: Build All
          command: yarn build && yarn build:components
      - save_cache:
          name: Save Build Cache
          key: build-cache
          paths:
            - ./components-square
            - ./README.md

  deploy:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - restore_cache:
          name: Restore Build Cache
          keys:
            - build-cache
      - run:
          name: Deploy
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "$GITHUB_EMAIL"
            git config user.name "$GITHUB_USERNAME"
            git add .
            git commit -m "docs: via CircleCI build"
            git push -q https://$GITHUB_PERSONAL_TOKEN@github.com/tolerance-go/keep-learning.git master

workflows:
  version: 2.1
  default:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - master
            tags:
              only: /^v.*/
      - deploy:
          context: GITHUB_TOKEN
          requires:
            - build
          filters:
            branches:
              only:
                - master
            tags:
              only: /^v.*/
